{"version":3,"sources":["FakeCurrencyInput.tsx"],"names":["React","StyleSheet","View","CurrencyInput","TextWithCursor","FakeCurrencyInput","forwardRef","props","ref","value","style","onChangeText","containerStyle","caretHidden","caretColor","caretStyle","selectionColor","onFocus","onBlur","rest","focused","setFocused","useState","formattedValue","setFormattedValue","placeholderStyle","color","placeholderTextColor","styles","inputContainer","placeholder","text","e","inputHidden","create","position","top","left","right","bottom","fontSize"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAgCC,IAAhC,QAA4C,cAA5C;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,gBAAGL,KAAK,CAACM,UAAN,CACxB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,cAJI;AAKJC,IAAAA,WALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA,UAPI;AAQJC,IAAAA,cARI;AASJC,IAAAA,OATI;AAUJC,IAAAA,MAVI;AAWJ,OAAGC;AAXC,MAYFZ,KAZJ;AAcA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBrB,KAAK,CAACsB,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCxB,KAAK,CAACsB,QAAN,CAAe,EAAf,CAA5C;AACA,QAAMG,gBAAgB,GAAGF,cAAc,GACnC,EADmC,GAEnC;AAAEG,IAAAA,KAAK,EAAEnB,KAAK,CAACoB;AAAf,GAFJ;AAIA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACf,cAAD,EAAiBgB,MAAM,CAACC,cAAxB;AAAb,kBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAE,CAACnB,KAAD,EAAQe,gBAAR,CADT;AAEE,IAAA,aAAa,EAAEL,OAAO,IAAI,CAACP,WAF7B;AAGE,IAAA,WAAW,EAAE;AAAEH,MAAAA,KAAK,EAAE,CAAC;AAAEgB,QAAAA,KAAK,EAAEZ,UAAU,IAAIE;AAAvB,OAAD,EAA0CD,UAA1C;AAAT;AAHf,KAKGQ,cAAc,GAAGA,cAAH,GAAoBhB,KAAK,CAACuB,WAL3C,CADF,eAQE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAErB,KADT;AAEE,IAAA,YAAY,EAAGsB,IAAD,IAAU;AACtBP,MAAAA,iBAAiB,CAACO,IAAD,CAAjB;AACApB,MAAAA,YAAY,IAAIA,YAAY,CAACoB,IAAD,CAA5B;AACD;AALH,KAMMZ,IANN;AAOE,IAAA,cAAc,EAAC,aAPjB;AAQE,IAAA,WAAW,MARb;AASE,IAAA,OAAO,EAAGa,CAAD,IAAO;AACdX,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,MAAAA,OAAO,IAAIA,OAAO,CAACe,CAAD,CAAlB;AACD,KAZH;AAaE,IAAA,MAAM,EAAGA,CAAD,IAAO;AACbX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,MAAAA,MAAM,IAAIA,MAAM,CAACc,CAAD,CAAhB;AACD,KAhBH;AAiBE,IAAA,KAAK,EAAEJ,MAAM,CAACK,WAjBhB;AAkBE,IAAA,GAAG,EAAEzB;AAlBP,KARF,CADF;AA+BD,CArDuB,CAA1B;AAwDA,MAAMoB,MAAM,GAAG3B,UAAU,CAACiC,MAAX,CAAkB;AAC/BL,EAAAA,cAAc,EAAE;AACdM,IAAAA,QAAQ,EAAE;AADI,GADe;AAI/BF,EAAAA,WAAW,EAAE;AACXP,IAAAA,KAAK,EAAE,aADI;AAEXS,IAAAA,QAAQ,EAAE,UAFC;AAGXC,IAAAA,GAAG,EAAE,CAHM;AAIXC,IAAAA,IAAI,EAAE,CAAC,EAJI;AAKXC,IAAAA,KAAK,EAAE,CALI;AAMXC,IAAAA,MAAM,EAAE,CANG;AAOXC,IAAAA,QAAQ,EAAE;AAPC;AAJkB,CAAlB,CAAf;AAeA,eAAenC,iBAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, TextInput, View } from 'react-native';\n\nimport { CurrencyInput } from './CurrencyInput';\nimport TextWithCursor from './TextWithCursor';\nimport type { FakeCurrencyInputProps } from './props';\n\n/**\n * This component hides the real currency input and use a Text to imitate the input. So you won't get the flickering issue, but will lost selection functionality.\n * The cursor is not a real cursor, but a pipe character (|) and it'll be always at the end of the text.\n */\nconst FakeCurrencyInput = React.forwardRef<TextInput, FakeCurrencyInputProps>(\n  (props, ref) => {\n    const {\n      value,\n      style,\n      onChangeText,\n      containerStyle,\n      caretHidden,\n      caretColor,\n      caretStyle,\n      selectionColor,\n      onFocus,\n      onBlur,\n      ...rest\n    } = props;\n\n    const [focused, setFocused] = React.useState(false);\n    const [formattedValue, setFormattedValue] = React.useState('');\n    const placeholderStyle = formattedValue\n      ? {}\n      : { color: props.placeholderTextColor };\n\n    return (\n      <View style={[containerStyle, styles.inputContainer]}>\n        <TextWithCursor\n          style={[style, placeholderStyle]}\n          cursorVisible={focused && !caretHidden}\n          cursorProps={{ style: [{ color: caretColor || selectionColor }, caretStyle] }}\n        >\n          {formattedValue ? formattedValue : props.placeholder}\n        </TextWithCursor>\n        <CurrencyInput\n          value={value}\n          onChangeText={(text) => {\n            setFormattedValue(text);\n            onChangeText && onChangeText(text);\n          }}\n          {...rest}\n          selectionColor=\"transparent\"\n          caretHidden\n          onFocus={(e) => {\n            setFocused(true);\n            onFocus && onFocus(e);\n          }}\n          onBlur={(e) => {\n            setFocused(false);\n            onBlur && onBlur(e);\n          }}\n          style={styles.inputHidden}\n          ref={ref}\n        />\n      </View>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    position: 'relative',\n  },\n  inputHidden: {\n    color: 'transparent',\n    position: 'absolute',\n    top: 0,\n    left: -20,\n    right: 0,\n    bottom: 0,\n    fontSize: 1,\n  },\n});\n\nexport default FakeCurrencyInput;\n"]}